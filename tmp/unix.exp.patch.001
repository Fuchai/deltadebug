--- dbg/find14/find/xargs/testsuite/config/unix.exp	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/xargs/testsuite/config/unix.exp	2020-01-28 23:39:42.000000000 -0600
@@ -1,6 +1,6 @@
 # -*- TCL -*-
 # Test-specific TCL procedures required by DejaGNU.
-# Copyright (C) 1994 Free Software Foundation, Inc.
+# Copyright (C) 1994, 2005 Free Software Foundation, Inc.
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -14,10 +14,10 @@
 # 
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 # USA.
 
-# Modified by David MacKenzie <djm@gnu.org> from the gcc files
+# Modified by David MacKenzie <djm@gnu.ai.mit.edu> from the gcc files
 # written by Rob Savoye <rob@cygnus.com>.
 
 
@@ -54,7 +54,7 @@ proc xargs_version {} {
 
 # Run xargs and leave the output in $comp_output.
 # Called by individual test scripts.
-proc xargs_start { passfail options {infile ""}} {
+proc xargs_start { passfail options {infile ""} {errh ""} } {
     global verbose
     global XARGS
     global XARGSFLAGS
@@ -65,20 +65,34 @@ proc xargs_start { passfail options {inf
 	exit 1
     }
 
-    set fail_good [string match "f*" $passfail]
-
     set scriptname [uplevel {info script}]
     set testbase [file rootname $scriptname]
     set testname [file tail $testbase]
 
+    if {[string match "\[0-9\]*" $passfail]} then {
+	set execrc "$passfail"
+    } elseif {[string match "p*" $passfail]} then {
+	set execrc "0"
+    } elseif {[string match "f*" $passfail]} then {
+	set execrc "1"
+    } else {
+	fail "$testname, failure in testing framework: passfail=$passfail"
+	return
+    }
+
     set outfile "$testbase.xo"
-    set errfile "$testbase.xe"
     if {$infile != ""} then {
 	set infile "[file dirname [file dirname $testbase]]/inputs/$infile"
     } else {
 	set infile /dev/null
     }
 
+    if {[string match "s*" $errh]} then {
+    	set errfile ""
+    } else {
+	set errfile "$testbase.xe"
+    }
+
     catch "exec rm -f xargs.out xargs.err"
 
     set cmd "$XARGS $XARGSFLAGS $options < $infile > xargs.out 2> xargs.err"
@@ -87,25 +101,30 @@ proc xargs_start { passfail options {inf
 	send_user "Spawning \"$cmd\"\n"
     }
 
-    catch "exec $cmd" comp_output
-    if {$comp_output != ""} then {
-	# The command failed; if that was the desired effect, the 
-	# test might still pass
-	send_log "$comp_output\n"
-	if $verbose>1 then {
-	    send_user "$comp_output\n"
+    set status 0
+    if {[catch "exec $cmd" comp_output]} then {
+	if {[lindex $::errorCode 0] == "CHILDSTATUS"} then {
+	    set status [lindex $::errorCode 2]
+	} else {
+	    fail "$testname, failure in testing framework, $comp_output"
+	    return
 	}
-	if $fail_good then {
-	    # expected failure
-	    pass "$testname"
+    }
+
+    catch "exec cat xargs.err" comp_error
+
+    if {$execrc != $status} then {
+	if {$status == 0} then {
+	    fail "$testname, unexpected success"
+	} elseif {$execrc == 0} then {
+	    fail "$testname, unexpected failure, $comp_output, $comp_error"
 	} else {
-	    # unexpected failure
-	    fail "$testname, $comp_output"
+	    fail "$testname, expected exit code $execrc, but got exit code $status"
 	}
 	return
     }
+    # ok, at least exit code match.
 
-    # The command succeeded, but that might not have been the expected result.
     if [file exists $outfile] then {
 	set cmp_cmd "cmp xargs.out $outfile"
 	send_log "$cmp_cmd\n"
@@ -113,35 +132,34 @@ proc xargs_start { passfail options {inf
 	if {$cmpout != ""} then {
 	    # stdout is wrong.
 	    catch "exec diff -u xargs.out $outfile" diffs
-	    send_log "diffs: $diffs\n"
+	    send_log "stdout diffs: $diffs\n"
 	    fail "$testname, wrong stdout output: $cmpout"
 	    return
 	}
-    } else {
-	if {[file size xargs.out] != 0} then {
-	    fail "$testname, output on stdout should be empty"
-	    return
-	}
+    } elseif {[file size xargs.out] != 0} then {
+	fail "$testname, output on stdout should be empty"
+	return
     }
 
-    # If testname.xe exists, check the stderr result.
-    if [file exists $errfile] then {
-	set cmp_cmd "cmp xargs.err $errfile"
-	send_log "$cmp_cmd\n"
-	catch "exec $cmp_cmd" cmperr
-	if {$cmperr != ""} then {
-	    # stderr is wrong.
-	    catch "exec diff -u xargs.err $errfile" diffs
-	    send_log "$diffs\n"
-	    fail "$testname, wrong stderr output: $cmperr"
-	    return
-	}
-    } else {
-	if {[file size xargs.err] != 0} then {
+    # if stderr check is enabled,
+    if {$errfile != ""} then {
+	if {[file exists $errfile]} then {
+	    set cmp_cmd "cmp xargs.err $errfile"
+	    send_log "$cmp_cmd\n"
+	    catch "exec $cmp_cmd" cmperr
+	    if {$cmperr != ""} then {
+		# stderr is wrong
+		catch "exec diff -ua xargs.err $errfile" diffs
+		send_log "stderr diffs: $diffs\n"
+		fail "$testname, wrong stderr output: $cmperr"
+		return
+	    }
+	} elseif {[file size xargs.err] != 0} then {
 	    fail "$testname, output on stderr should be empty"
 	    return
 	}
     }
+
     pass "$testname"
 }
 
@@ -150,5 +168,3 @@ proc xargs_start { passfail options {inf
 proc xargs_exit {} {
     catch "exec rm -f xargs.out xargs.err"
 }
-
-
Only in dbg/find6/find/xargs/testsuite/inputs: 16383-ys.xi
Only in dbg/find6/find/xargs/testsuite/inputs: 32767-ys.xi
Only in dbg/find6/find/xargs/testsuite/inputs: empty.xi
Only in dbg/find6/find/xargs/testsuite/inputs: eof_-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: eof1.xi
Only in dbg/find6/find/xargs/testsuite/inputs: EOFb.xi
Only in dbg/find6/find/xargs/testsuite/inputs: EOFe.xi
Only in dbg/find6/find/xargs/testsuite/inputs: eof_.xi
Only in dbg/find14/find/xargs/testsuite/inputs: eof.xi
Only in dbg/find6/find/xargs/testsuite/inputs: EOF.xi
Only in dbg/find6/find/xargs/testsuite/inputs: ett.xi
Only in dbg/find6/find/xargs/testsuite/inputs: formfeeds.xi
Only in dbg/find6/find/xargs/testsuite/inputs: ftt.xi
Only in dbg/find6/find/xargs/testsuite/inputs: helloworld.xi
Only in dbg/find6/find/xargs/testsuite/inputs: items-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: items.xi
Only in dbg/find6/find/xargs/testsuite/inputs: ldata-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: ldatab-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: ldatab.xi
Only in dbg/find6/find/xargs/testsuite/inputs: ldata.xi
Only in dbg/find6/find/xargs/testsuite/inputs: noeof-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: noeof.xi
Only in dbg/find6/find/xargs/testsuite/inputs: Pdata.xi
Only in dbg/find6/find/xargs/testsuite/inputs: space.xi
Only in dbg/find6/find/xargs/testsuite/inputs: stairs-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: stairs2-0.xi
Only in dbg/find6/find/xargs/testsuite/inputs: stairs2.xi
Only in dbg/find6/find/xargs/testsuite/inputs: stairs.xi
Only in dbg/find6/find/xargs/testsuite/inputs: stt.xi
Only in dbg/find6/find/xargs/testsuite/inputs: unmatched2.xi
Only in dbg/find6/find/xargs/testsuite/inputs: unmatched.xi
Only in dbg/find6/find/xargs/testsuite/inputs: verticaltabs.xi
diff -up -r dbg/find14/find/xargs/testsuite/Makefile dbg/find6/find/xargs/testsuite/Makefile
