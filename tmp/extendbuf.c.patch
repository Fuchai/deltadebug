--- dbg/find14/find/lib/extendbuf.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/lib/extendbuf.c	2020-01-28 23:39:42.000000000 -0600
@@ -14,7 +14,7 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 /* Written by James Yougnman <jay@gnu.org>. */
 
@@ -25,6 +25,7 @@
 #include <stddef.h>
 #include <stdlib.h>
 #include <assert.h>
+#include <errno.h>
 
 #include "xalloc.h"
 #include "extendbuf.h"
@@ -60,31 +61,45 @@ decide_size(size_t current, size_t wante
 void *
 extendbuf(void* existing, size_t wanted, size_t *allocated)
 {
+  int saved_errno;
   size_t newsize;
+  void *result; /* leave uninitialised to allow static code checkers to identify bugs */
+
+  saved_errno = errno;
   
   assert(wanted > 0u);
   newsize = decide_size(*allocated, wanted);
-
+  
   if ( (*allocated) == 0 )
     {
-      /* Sanity check: If there is no existing allocation size, three
+      /* Sanity check: If there is no existing allocation size, there
        * must be no existing allocated buffer.
        */
       assert(NULL == existing);
 
       (*allocated) = newsize;
-      return xmalloc(newsize);
+      result = xmalloc(newsize);
     }
   else
     {
       if (newsize != (*allocated) )
 	{
 	  (*allocated) = newsize;
-	  return xrealloc (existing, newsize);
+	  result = xrealloc (existing, newsize);
+	  
 	}
       else
 	{
-	  return existing;
+	  result = existing;
 	}
     }
+  
+  if (result)
+    {
+      /* xmalloc() or xrealloc() may have changed errno, but in the
+	 success case we want to preserve the previous value.
+      */
+      errno = saved_errno;
+    }
+  return result;
 }
diff -up -r dbg/find14/find/lib/extendbuf.h dbg/find6/find/lib/extendbuf.h
