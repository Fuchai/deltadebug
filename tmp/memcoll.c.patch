--- dbg/find14/find/gnulib-cvs/gnulib/lib/memcoll.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/memcoll.c	2020-01-28 23:39:42.000000000 -0600
@@ -1,5 +1,6 @@
 /* Locale-specific memory comparison.
-   Copyright (C) 1999, 2002, 2003, 2004 Free Software Foundation, Inc.
+
+   Copyright (C) 1999, 2002, 2003, 2004, 2006 Free Software Foundation, Inc.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -13,13 +14,11 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 /* Contributed by Paul Eggert <eggert@twinsun.com>.  */
 
-#if HAVE_CONFIG_H
-# include <config.h>
-#endif
+#include <config.h>
 
 #include "memcoll.h"
 
@@ -38,39 +37,51 @@ memcoll (char *s1, size_t s1len, char *s
 
 #if HAVE_STRCOLL
 
-  char n1 = s1[s1len];
-  char n2 = s2[s2len];
-
-  s1[s1len++] = '\0';
-  s2[s2len++] = '\0';
+  /* strcoll is slow on many platforms, so check for the common case
+     where the arguments are bytewise equal.  Otherwise, walk through
+     the buffers using strcoll on each substring.  */
 
-  while (! (errno = 0, (diff = strcoll (s1, s2)) || errno))
+  if (s1len == s2len && memcmp (s1, s2, s1len) == 0)
     {
-      /* strcoll found no difference, but perhaps it was fooled by NUL
-	 characters in the data.  Work around this problem by advancing
-	 past the NUL chars.  */
-      size_t size1 = strlen (s1) + 1;
-      size_t size2 = strlen (s2) + 1;
-      s1 += size1;
-      s2 += size2;
-      s1len -= size1;
-      s2len -= size2;
+      errno = 0;
+      diff = 0;
+    }
+  else
+    {
+      char n1 = s1[s1len];
+      char n2 = s2[s2len];
 
-      if (s1len == 0)
-	{
-	  if (s2len != 0)
-	    diff = -1;
-	  break;
-	}
-      else if (s2len == 0)
+      s1[s1len++] = '\0';
+      s2[s2len++] = '\0';
+
+      while (! (errno = 0, (diff = strcoll (s1, s2)) || errno))
 	{
-	  diff = 1;
-	  break;
+	  /* strcoll found no difference, but perhaps it was fooled by NUL
+	     characters in the data.  Work around this problem by advancing
+	     past the NUL chars.  */
+	  size_t size1 = strlen (s1) + 1;
+	  size_t size2 = strlen (s2) + 1;
+	  s1 += size1;
+	  s2 += size2;
+	  s1len -= size1;
+	  s2len -= size2;
+
+	  if (s1len == 0)
+	    {
+	      if (s2len != 0)
+		diff = -1;
+	      break;
+	    }
+	  else if (s2len == 0)
+	    {
+	      diff = 1;
+	      break;
+	    }
 	}
-    }
 
-  s1[s1len - 1] = n1;
-  s2[s2len - 1] = n2;
+      s1[s1len - 1] = n1;
+      s2[s2len - 1] = n2;
+    }
 
 #else
 
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/memcoll.h dbg/find6/find/gnulib-cvs/gnulib/lib/memcoll.h
