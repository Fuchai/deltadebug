--- dbg/find14/find/gnulib-cvs/gnulib/lib/gettime.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/gettime.c	2020-01-28 23:39:42.000000000 -0600
@@ -1,5 +1,6 @@
 /* gettime -- get the system clock
-   Copyright (C) 2002, 2004 Free Software Foundation, Inc.
+
+   Copyright (C) 2002, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -13,47 +14,36 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 /* Written by Paul Eggert.  */
 
-#ifdef HAVE_CONFIG_H
-# include <config.h>
-#endif
+#include <config.h>
 
 #include "timespec.h"
 
-/* Get the system time.  */
+#include <sys/time.h>
+
+/* Get the system time into *TS.  */
 
-int
+void
 gettime (struct timespec *ts)
 {
-#if defined CLOCK_REALTIME && HAVE_CLOCK_GETTIME
+#if HAVE_NANOTIME
+  nanotime (ts);
+#else
+
+# if defined CLOCK_REALTIME && HAVE_CLOCK_GETTIME
   if (clock_gettime (CLOCK_REALTIME, ts) == 0)
-    return 0;
-#endif
+    return;
+# endif
 
-#if HAVE_GETTIMEOFDAY
   {
     struct timeval tv;
-    if (gettimeofday (&tv, 0) == 0)
-      {
-	ts->tv_sec = tv.tv_sec;
-	ts->tv_nsec = tv.tv_usec * 1000;
-	return 0;
-      }
+    gettimeofday (&tv, NULL);
+    ts->tv_sec = tv.tv_sec;
+    ts->tv_nsec = tv.tv_usec * 1000;
   }
-#endif
 
-  {
-    time_t t = time (0);
-    if (t != (time_t) -1)
-      {
-	ts->tv_sec = t;
-	ts->tv_nsec = 0;
-	return 0;
-      }
-  }
-
-  return -1;
+#endif
 }
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/gettimeofday.c dbg/find6/find/gnulib-cvs/gnulib/lib/gettimeofday.c
