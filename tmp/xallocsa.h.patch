--- dbg/find14/find/gnulib-cvs/gnulib/lib/xallocsa.h	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/xallocsa.h	2020-01-28 23:39:42.000000000 -0600
@@ -1,5 +1,5 @@
 /* Safe automatic memory allocation with out of memory checking.
-   Copyright (C) 2003 Free Software Foundation, Inc.
+   Copyright (C) 2003, 2005 Free Software Foundation, Inc.
    Written by Bruno Haible <bruno@clisp.org>, 2003.
 
    This program is free software; you can redistribute it and/or modify
@@ -14,13 +14,19 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 #ifndef _XALLOCSA_H
 #define _XALLOCSA_H
 
 #include "allocsa.h"
 
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+
 /* xallocsa(N) is a checking safe variant of alloca(N).  It allocates N bytes
    of memory allocated on the stack, that must be freed using freesa() before
    the function returns.  Upon failure, it exits with an error message.  */
@@ -39,4 +45,10 @@ extern void * xmallocsa (size_t n);
     xnallocsa (size_t n, size_t s) - behaves like xallocsa (n * s)
    If this would be useful in your application. please speak up.  */
 
+
+#ifdef __cplusplus
+}
+#endif
+
+
 #endif /* _XALLOCSA_H */
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/xasprintf.c dbg/find6/find/gnulib-cvs/gnulib/lib/xasprintf.c
