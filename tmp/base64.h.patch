--- dbg/find14/find/gnulib-cvs/gnulib/lib/base64.h	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/base64.h	2020-01-28 23:39:42.000000000 -0600
@@ -1,5 +1,5 @@
 /* base64.h -- Encode binary data using printable characters.
-   Copyright (C) 2004 Free Software Foundation, Inc.
+   Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.
    Written by Simon Josefsson.
 
    This program is free software; you can redistribute it and/or modify
@@ -14,20 +14,20 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 #ifndef BASE64_H
 # define BASE64_H
 
 /* Get size_t. */
-#include <stddef.h>
+# include <stddef.h>
 
 /* Get bool. */
-#include <stdbool.h>
+# include <stdbool.h>
 
 /* This uses that the expression (n+(k-1))/k means the smallest
    integer >= n/k, i.e., the ceiling of n/k.  */
-#define BASE64_LENGTH(inlen) ((((inlen) + 2) / 3) * 4)
+# define BASE64_LENGTH(inlen) ((((inlen) + 2) / 3) * 4)
 
 extern bool isbase64 (char ch);
 
@@ -37,9 +37,9 @@ extern void base64_encode (const char *r
 extern size_t base64_encode_alloc (const char *in, size_t inlen, char **out);
 
 extern bool base64_decode (const char *restrict in, size_t inlen,
-			   char *restrict out, size_t * outlen);
+			   char *restrict out, size_t *outlen);
 
 extern bool base64_decode_alloc (const char *in, size_t inlen,
-				 char **out, size_t * outlen);
+				 char **out, size_t *outlen);
 
 #endif /* BASE64_H */
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/basename.c dbg/find6/find/gnulib-cvs/gnulib/lib/basename.c
