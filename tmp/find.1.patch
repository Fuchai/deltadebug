--- dbg/find14/find/find/find.1	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/find/find.1	2020-01-28 23:39:42.000000000 -0600
@@ -3,7 +3,7 @@
 find \- search for files in a directory hierarchy
 .SH SYNOPSIS
 .B find 
-[\-H] [\-L] [\-P] [path...] [expression]
+[\-H] [\-L] [\-P] [-D debugopts] [-Olevel] [path...] [expression]
 .SH DESCRIPTION
 This manual page
 documents the GNU version of
@@ -18,10 +18,20 @@ known (the left hand side is false for \
 .B find
 moves on to the next file name.
 .PP
+If you are using 
+.B find 
+in an environment where security is important (for example if you are
+using it to seach directories that are writable by other users), you
+should read the "Security Considerations" chapter of the findutils
+documentation, which is called \fBFinding Files\fP and comes with
+findutils.   That document also includes a lot more detail 
+and discussion than this manual page, so you may find it a more useful 
+source of information.
+.SH OPTIONS
 The `\-H', `\-L' and `\-P' options control the treatment of symbolic
 links.  Command-line arguments following these are taken to be names
 of files or directories to be examined, up to the first argument that
-begins with `\-', `(', `)', `,', or `!'.  That argument and any
+begins with `\-', or the argument `(' or `!'.  That argument and any
 following arguments are taken to be the expression describing what is
 to be searched for.  If no paths are given, the current directory is
 used.  If no expression is given, the expression `\-print' is used
@@ -30,10 +40,9 @@ used.  If no expression is given, the ex
 This manual page talks about `options' within the expression list.
 These options control the behaviour of 
 .B find
-but are specified immediately after the last path name.  The two
+but are specified immediately after the last path name.  The three
 `real' options `\-H', `\-L' and `\-P' must appear before the first
 path name, if at all.
-.SH OPTIONS
 .IP \-P
 Never follow symbolic links.  This is the default behaviour.  When 
 .B find
@@ -50,11 +59,20 @@ from the link itself (unless it is a bro
 .B find
 is unable to examine the file to which the link points).  Use of this
 option implies \-noleaf.  If you later use the \-P option, \-noleaf
-will still be in effect.
+will still be in effect.  If \-L is in effect and 
+.B find 
+discovers a symbolic link to a subdirectory during its search, 
+the subdirectory pointed to by the symbolic link will be searched.
+.IP
+When the \-L option is in effect, the \-type predicate will always
+match against the type of the file that a symbolic link points to
+rather than the link itself (unless the symbolic link is broken).
+Using \-L causes the \-lname and \-ilname predicates always to return
+false.
 
 .IP \-H
-Do not follow symbolic links, except those appearing on the command
-line.  When
+Do not follow symbolic links, except while processing the command
+line arguments.  When
 .B find
 examines or prints information about files, the information used 
 shall be taken from the properties of the symbolic link itself.   The
@@ -63,18 +81,15 @@ command line is a symbolic link, and the
 that situation, the information used is taken from whatever the link
 points to (that is, the link is followed).  The information about the
 link itself is used as a fallback if the file pointed to by the
-symbolic link cannot be examined.
-
-When the \-H option is in effect, the \-type predicate will always
-match against the type of the file that a symbolic link points to
-rather than the link itself (unless the symbolic link is broken).
-Using \-H causes the \-lname and \-ilname predicates always to return
-false.
+symbolic link cannot be examined.  If \-H is in effect and one of the
+paths specified on the command line is a symbolic link to a directory,
+the contents of that directory will be examined (though of course
+\-maxdepth 0 would prevent this).
 .P
-If more than one of \-H, \-L and \-P are both specified, each
-overrides the others; the last one appearing on the command line takes
-effect.  Since it is the default, the \-P option should be considered
-to be in effect unless either \-H or \-L is specified.
+If more than one of \-H, \-L and \-P is specified, each overrides the
+others; the last one appearing on the command line takes effect.
+Since it is the default, the \-P option should be considered to be in
+effect unless either \-H or \-L is specified.
 
 GNU 
 .B find
@@ -97,36 +112,111 @@ the link itself will be used.
 When the \-H or \-L options are in effect, any symbolic links listed
 as the argument of \-newer will be dereferenced, and the timestamp
 will be taken from the file to which the symbolic link points.  The
-same consideration applies to \-anewer and \-cnewer.
-
-Similarly, when \-H or \-L is in effect, the \-type predicate will
-always match against the type of the file that a symbolic link points
-to rather than the link itself (unless the link is broken or cannot be
-dereferenced).  Using \-H or \-L causes the \-lname and \-ilname
-predicates always to return false (again, except in the case of broken
-links).
+same consideration applies to \-newerXY, \-anewer and \-cnewer.
 
 The \-follow option has a similar effect to \-L, though it takes
 effect at the point where it appears (that is, if \-L is not used but
-\-follow is, any symbolic links appearing after it on the command line
-will be dereferenced).
+\-follow is, any symbolic links appearing after \-follow on the
+command line will be dereferenced, and those before it will not).
 
+.IP "\-D debugoptions"
+Print diagnostic information; this can be helpful to diagnose problems
+with why
+.B find 
+is not doing what you want.  The list of debug options should be comma
+separated.  Compatibility of the debug options is not guaranteed
+between releases of findutils.  For a complete list of valid debug
+options, see the output of
+.B find \-D
+.BR help .
+Valid debug options include
+.RS
+.IP help
+Explain the debugging options
+.IP tree
+Show the expression tree in its original and optimised form.
+.IP stat
+Print messages as files are examined with the 
+.B stat 
+and 
+.B lstat 
+system calls.  The 
+.B find
+program tries to minimise such calls.
+.IP opt
+Prints diagnostic information relating to the optimisation of the
+expression tree; see the \-O option.
+.RE
+.IP \-Olevel
+Enables query optimisation.   The 
+.B find 
+program reorders tests to speed up execution while preserving the
+overall effect; that is, predicates with side effects are not
+reordered relative to each other.  The optimisations performed at each
+optimisation level are as follows.
+.RS
+.IP 0
+Equivalent to optimisation level 1.
+.IP 1
+This is the default optimisation level and corresponds to the
+traditional behaviour.  Expressions are reordered so that tests based
+only on the names of files (for example \-name 
+and \-regex) are performed first.
+.IP 2
+Any \-type 
+or \-xtype 
+tests are performed after any tests based only on the names of files,
+but before any tests that require information from the inode.  On many
+modern versions of Unix, file types are returned by
+.B readdir() 
+and so these predicates are faster to evaluate than predicates which
+need to stat the file first.
+.IP 3
+At this optimisation level, the full cost-based query optimiser is
+enabled.  The order of tests is modified so that cheap (i.e. fast)
+tests are performed first and more expensive ones are performed later,
+if necessary.  Within each cost band, predicates are evaluated earlier
+or later according to whether they are likely to succeed or not.  For \-o,
+predicates which are likely to succeed are evaluated earlier, and for \-a,
+predicates which are likely to fail are evaluated earlier.
+.RE
+.IP
+The cost-based optimiser has a fixed idea of how likely any given test
+is to succeed.  In some cases the probability takes account of the
+specific nature of the test (for example, \-type f
+is assumed to be more likely to succeed than \-type c).
+The cost-based optimiser is currently being evaluated.   If it does
+not actually improve the performance of 
+.BR find ,
+it will be removed again.  Conversely, optimisations that prove to be
+reliable, robust and effective may be enabled at lower optimisation
+levels over time.  However, the default behaviour (i.e. optimisation
+level 1) will not be changed in the 4.3.x release series.  The
+findutils test suite runs all the tests on 
+.B find
+at each optimisation level and ensures that the result is the same.
 .P
 .SH EXPRESSIONS
 The expression is made up of options (which affect overall operation
-rather than the processing of a specific file, and always return true),
-tests (which return a true or false value), and actions (which have side
-effects and return a true or false value), all separated by operators.
-\-and is assumed where the operator is omitted.  If the expression contains
-no actions other than \-prune, \-print is performed on all files
-for which the expression is true.
+rather than the processing of a specific file, and always return
+true), tests (which return a true or false value), and actions (which
+have side effects and return a true or false value), all separated by
+operators.  \-and is assumed where the operator is omitted.  
+
+If the expression contains no actions other than \-prune, \-print is
+performed on all files for which the expression is true.
+
 .SS OPTIONS
 .P
 All options always return true.  Except for \-follow and \-daystart,
-they always take effect, rather than being processed only when their
-place in the expression is reached.  Therefore, for clarity, it is
-best to place them at the beginning of the expression.  A warning is
-issued if you don't do this.
+the options affect all tests, including tests specified before the
+option.  This is because the options are processed when the command
+line is parsed, while the tests don't do anything until files are
+examined.  The \-follow and \-daystart options are different in this
+respect, and have an effect only on tests which appear later in the
+command line.  Therefore, for clarity, it is best to place them at the
+beginning of the expression.  A warning is issued if you don't do
+this.
 .IP \-daystart
 Measure times (for \-amin, \-atime, \-cmin, \-ctime, \-mmin, and \-mtime)
 from the beginning of today rather than from 24 hours ago.  This
@@ -137,14 +227,16 @@ Process each directory's contents before
 A synonym for \-depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.
 .IP \-follow
 Deprecated; use the \-L option instead.  Dereference symbolic links.
-Implies \-noleaf.  Unless the \-H or \-L option has been specified,
-the position of the \-follow option changes the behaviour of the
-\-newer predicate; any files listed as the argument of \-newer will be
-dereferenced if they are symbolic links.  The same consideration
-applies to \-anewer and \-cnewer.  Similarly, the \-type predicate
-will always match against the type of the file that a symbolic link
-points to rather than the link itself.  Using \-follow causes the
-\-lname and \-ilname predicates always to return false.
+Implies \-noleaf.  The \-follow option affects only those tests which
+appear after it on the command line.  Unless the \-H or \-L option has
+been specified, the position of the \-follow option changes the
+behaviour of the \-newer predicate; any files listed as the argument
+of \-newer will be dereferenced if they are symbolic links.  The same
+consideration applies to \-newerXY, \-anewer and \-cnewer.  Similarly,
+the \-type predicate will always match against the type of the file
+that a symbolic link points to rather than the link itself.  Using
+\-follow causes the \-lname and \-ilname predicates always to return
+false.
 .IP "\-help, \-\-help"
 Print a summary of the command-line usage of
 .B find
@@ -153,7 +245,7 @@ and exit.
 Normally, \fBfind\fR will emit an error message when it fails to stat a file.
 If you give this option and a file is deleted between the time \fBfind\fR 
 reads the name of the file from the directory and the time it tries to stat 
-the file, nno error message will be issued.    This also applies to files
+the file, no error message will be issued.    This also applies to files
 or directories whose names are given on the command line.  This option takes
 effect at the time the command line is read, which means that you cannot search
 one part of the filesystem with this option on and part of it with this option
@@ -188,6 +280,15 @@ than the directory's link count, it know
 in the directory are non-directories (`leaf' files in the directory
 tree).  If only the files' names need to be examined, there is no need
 to stat them; this gives a significant increase in search speed.
+.IP "\-regextype \fItype\fR"
+Changes the regular expression syntax understood by 
+.B \-regex
+and 
+.B \-iregex
+tests which occur later on the command line.  Currently-implemented
+types are emacs (this is the default), posix-awk, posix-basic,
+posix-egrep and posix-extended.
+
 .IP "\-version, \-\-version"
 Print the \fBfind\fR version number and exit.
 .IP "\-warn, \-nowarn"
@@ -201,6 +302,27 @@ otherwise.
 Don't descend directories on other filesystems.
 
 .SS TESTS
+Some tests, for example
+.B \-newerXY
+and 
+.BR -samefile ,
+allow comparison between the file currently being examined and some
+reference file specified on the command line.  When these tests are
+used, the interpretation of the reference file is determined by the 
+options 
+.BR \-H , 
+.R \-L 
+and 
+.R -P
+and any previous 
+.BR \-follow ,
+but the reference file is only examined once, at the time the command
+line is parsed.  If the reference file cannot be examined (for
+example, the 
+.BR stat (2) 
+system call fails for it), an error message is issued, and 
+.B find
+exits with a nonzero status.
 .P
 Numeric arguments can be specified as
 .IP \fI+n\fP
@@ -212,6 +334,7 @@ for less than
 .IP \fIn\fP
 for exactly
 .IR n .
+.P
 .IP "\-amin \fIn\fR"
 File was last accessed \fIn\fR minutes ago.
 .IP "\-anewer \fIfile\fR"
@@ -221,11 +344,11 @@ in effect, the access time of the file i
 used.
 .IP "\-atime \fIn\fR"
 File was last accessed \fIn\fR*24 hours ago.  
-When find figures out how many 24-hour preiods ago the file 
+When find figures out how many 24-hour periods ago the file 
 was last accessed, any fractional part is ignored, so to match 
 .B \-atime 
 .BR +1 ,
-a file has to have been modified at least 
+a file has to have been accessed at least 
 .I two
 days ago.
 .IP "\-cmin \fIn\fR"
@@ -266,7 +389,9 @@ patterns `fo*' and `F??' match the file
 `fOo', etc.   In these patterns, unlike filename expansion by the
 shell, an initial '.' can be matched by '*'.  That is, 
 .B find \-name *bar 
-will match the file `.foobar'.
+will match the file `.foobar'.   Please note that you should quote
+patterns as a matter of course, otherwise the shell will expand any
+wildcard characters in them.
 
 .IP "\-inum \fIn\fR"
 File has inode number \fIn\fR.  It is normally easier to use the 
@@ -301,15 +426,61 @@ and `[]') match a `.' at the start of th
 in findutils-4.2.2; see section STANDARDS CONFORMANCE below).  To ignore a
 directory and the files under it, use \-prune; see an example in the
 description of \-wholename.  Braces are not recognised as being
-special, despite the fact that some shells including Bash ibmue braces
+special, despite the fact that some shells including Bash imbue braces
 with a special meaning in shell patterns.  The filename matching is
 performed with the use of the
 .BR fnmatch (3) 
-library function.
+library function.   Don't forget to enclose the pattern in quotes 
+in order to protect it from expansion by the shell.
+
 .IP "\-newer \fIfile\fR"
 File was modified more recently than \fIfile\fR.  If \fIfile\fR is a
 symbolic link and the \-H option or the \-L option is in effect, the
 modification time of the file it points to is always used.
+.IP "\-newerXY \fIreference\fR"
+Compares the timestamp of the current file with \fIreference\fR.  
+The 
+.I reference 
+argument is normally the name of a file (and one of its timestamps is
+used for the comparison) but it may also be a string describing an
+absolute time.  
+.I X 
+and 
+.I Y 
+are placeholders for other letters, and these letters select which
+time belonging to 
+how 
+.I reference 
+is used for the comparison.
+.TS
+ll
+ll
+ll
+ll
+llw(2i).
+a	The access time of the file \fIreference\fR 
+B	The birth time of the file \fIreference\fR
+c	The inode status change time of \fIreference\fR
+m	The modification time of the file \fIreference\fR
+t	\fIreference\fR is interpreted directly as a time
+.TE
+
+Some combinations are invalid; for example, it is invalid for
+.I X 
+to be 
+.IR t .
+Some combinations are not implemented on all systems; for example 
+.I B
+is not supported on all systems.  If an invalid or unsupported
+combination of 
+.I XY 
+is specified, a fatal error results.  Time specifications are
+interpreted as for the argument to the \-d option of GNU 
+.BR date .
+If you try to use the birth time of a reference file, and the birth
+time cannot be determined, a fatal error message results.  If you
+specify a test which refers to the birth time of files being examined,
+this test will fail for any files where the birth time is unknown.
 .IP \-nouser
 No user corresponds to file's numeric user ID.
 .IP \-nogroup
@@ -323,8 +494,8 @@ Since an exact match is required, if you
 symbolic modes, you may have to specify a rather complex mode string.
 For example '\-perm g=w' will only match files which have mode 0020
 (that is, ones for which group write permission is the only permission
-set).  It is more likely that you will want to use the '+' or '-'
-forms, for example '\-perm -g=w', which matches any file with group
+set).  It is more likely that you will want to use the '/' or '-'
+forms, for example '\-perm \-g=w', which matches any file with group
 write permission.  See the
 .B EXAMPLES 
 section for some illustrative examples.
@@ -335,26 +506,62 @@ in which would want to use them.  You mu
 you use a symbolic mode.   See the 
 .B EXAMPLES 
 section for some illustrative examples.
-.IP "\-perm +\fImode\fR"
+.IP "\-perm /\fImode\fR"
 Any of the permission bits \fImode\fR are set for the file.  Symbolic
 modes are accepted in this form.  You must specify 'u', 'g' or 'o' if
 you use a symbolic mode.  See the
 .B EXAMPLES 
-section for some illustrative examples.
+section for some illustrative examples.  If no permission bits in 
+.I mode
+are set, this test currently matches no files.  However, it will soon
+be changed to match any file (the idea is to be more consistent with
+the behaviour of 
+.B perm 
+.BR \-000 ).
+.IP "\-perm +\fImode\fR"
+Deprecated, old way of searching for files with any of the permission
+bits in \fImode\fR set.  You should use
+.B \-perm \fI/mode\fR
+instead. Trying to use the '+' syntax with symbolic modes will yield
+surprising results.  For example, '+u+x' is a valid symbolic mode
+(equivalent to +u,+x, i.e. 0111) and will therefore not be evaluated
+as
+.B \-perm +\fImode\fR
+but instead as the exact mode specifier
+.B \-perm \fImode\fR
+and so it matches files with exact permissions 0111 instead of files with any
+execute bit set.  If you found this paragraph confusing, you're not
+alone - just use 
+.B \-perm /\fImode\fR.
+This form of the 
+.B \-perm
+test is deprecated because the POSIX specification requires the
+interpretation of a leading '+' as being part of a symbolic mode, and
+so we switched to using '/' instead.
+.IP "\-readable, \-writable, \-executable"
+Matches files which are readable, writable and executable,
+respectively.  This takes into account access control lists and other
+permissions artefacts which the 
+.B \-perm 
+test ignores.  This test makes use of the
+.BR access (2)
+system call, and so can be fooled by NFS servers which do UID
+mapping (or root-squashing), since many systems implement 
+.BR access (2) 
+in the client's kernel and so cannot make use of the UID mapping
+information held on the server.
 .IP "\-regex \fIpattern\fR"
 File name matches regular expression \fIpattern\fR.  This is a match
 on the whole path, not a search.  For example, to match a file named
 `./fubar3', you can use the regular expression `.*bar.' or `.*b.*3',
 but not `f.*r3'.  The regular expressions understood by 
 .B find 
-follow the conventions for the 
-.B re_match 
-system library function where this is present (i.e. on systems using
-the GNU C Library).  On other systems, the implementation within
-Gnulib is used; by default, Gnulib provides ``basic'' regular
-expressions.
+are by default Emacs Regular Expressions, but this can be
+changed with the 
+.B \-regextype 
+option.
 .IP "\-samefile \fIname\fR"
-File refers to the same inode as \fIname\fR.   When -L is in effect,
+File refers to the same inode as \fIname\fR.   When \-L is in effect,
 this can include symbolic links.
 .IP "\-size \fIn\fR[cwbkMG]"
 File uses \fIn\fP units of space.  The following suffixes 
@@ -396,8 +603,9 @@ named pipe (FIFO)
 .IP f
 regular file
 .IP l
-symbolic link (never true if the \-L option or the \-follow option is
-in effect, unless the symbolic link is broken).
+symbolic link; this is never true if the \-L option or the \-follow
+option is in effect, unless the symbolic link is broken.  If you want
+to search for symbolic links when \-L is in effect, use \-xtype.
 .IP s
 socket
 .IP D
@@ -437,7 +645,8 @@ the type of the file that \-type does no
 .SS ACTIONS
 .IP "\-delete\fR"
 Delete files; true if removal succeeded.  If the removal failed, an
-error message is issued.
+error message is issued.  Use of this action automatically turns on
+the '\-depth' option.
 
 .IP "\-exec \fIcommand\fR ;"
 Execute \fIcommand\fR; true if 0 status is returned.  All following
@@ -455,11 +664,11 @@ quoted to protect them from expansion by
 section for examples of the use of the `\-exec' option.  The specified
 command is run once for each matched file.
 The command is executed in the starting directory.   There are
-unavoidable security problems surrpounding use of the -exec option;
-you should use the -execdir option instead.  
+unavoidable security problems surrounding use of the \-exec option;
+you should use the \-execdir option instead.  
 
 .IP "\-exec \fIcommand\fR {} +"
-This variant of the -exec option runs the specified command on the
+This variant of the \-exec option runs the specified command on the
 selected files, but the command line is built by appending each
 selected file name at the end; the total number of invocations of the
 command will be much less than the number of matched files.  The
@@ -470,13 +679,13 @@ the command.  The command is executed in
 
 .IP "\-execdir \fIcommand\fR ;"
 .IP "\-execdir \fIcommand\fR {} +"
-Like -exec, but the specified command is run from the subdirectory
+Like \-exec, but the specified command is run from the subdirectory
 containing the matched file, which is not normally the directory in
 which you started 
 .BR find .
 This a much more secure method for invoking commands, as it avoids
 race conditions during resolution of the paths to the matched files.
-As with the -exec option, the '+' form of -execdir will build a
+As with the \-exec option, the '+' form of \-execdir will build a
 command line to process more than one matched file, but any given
 invocation of
 .I command 
@@ -490,7 +699,12 @@ appropriately-named file in a directory
 
 .IP "\-fls \fIfile\fR"
 True; like \-ls but write to \fIfile\fR like \-fprint.
-The output file is always created, even if the predicate is never matched.
+The output file is always created, even if the predicate is never
+matched.  
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
+
 .IP "\-fprint \fIfile\fR"
 True; print the full file name into file \fIfile\fR.  If \fIfile\fR
 does not exist when \fBfind\fR is run, it is created; if it does
@@ -498,16 +712,28 @@ exist, it is truncated.  The file names
 ``/dev/stderr'' are handled specially; they refer to the standard
 output and standard error output, respectively.
 The output file is always created, even if the predicate is never matched.
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
 .IP "\-fprint0 \fIfile\fR"
 True; like \-print0 but write to \fIfile\fR like \-fprint.
 The output file is always created, even if the predicate is never matched.
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
 .IP "\-fprintf \fIfile\fR \fIformat\fR"
 True; like \-printf but write to \fIfile\fR like \-fprint.
 The output file is always created, even if the predicate is never matched.
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
 .IP "\-ok \fIcommand\fR ;"
 Like \-exec but ask the user first (on the standard input); if the
 response does not start with `y' or `Y', do not run the command, and
-return false.
+return false.  If the command is run, its standard input is redirected
+from
+.BR /dev/null .
+
 .IP \-print
 True; print the full file name on the standard output, followed by a
 newline.   If you are piping the output of 
@@ -515,10 +741,15 @@ newline.   If you are piping the output
 into another program and there is the faintest possibility that the files 
 which you are searching for might contain a newline, then you should 
 seriously consider using the `\-print0' option instead of `\-print'.
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
 .IP "\-okdir \fIcommand\fR ;"
 Like \-execdir but ask the user first (on the standard input); if the
 response does not start with `y' or `Y', do not run the command, and
-return false.
+return false.  If the command is run, its standard input is redirected
+from
+.BR /dev/null .
 .IP \-print0
 True; print the full file name on the standard output, followed by a
 null character (instead of the newline character that `\-print' uses).
@@ -638,7 +869,9 @@ last two digits of year (00..99)
 year (1970...)
 .RE
 .IP %b
-File's size in 512-byte blocks (rounded up).
+The amount of disk space used for this file in 512-byte blocks. Since disk
+space is allocated in multiples of the filesystem block size this is usually
+greater than %s/1024, but it can also be smaller if the file is a sparse file.
 .IP %c
 File's last status change time in the format returned by the C `ctime'
 function.
@@ -662,13 +895,16 @@ File's group name, or numeric group ID i
 File's numeric group ID.
 .IP %h
 Leading directories of file's name (all but the last element).
+If the file name contains no slashes (since it is in the current 
+directory) the %h specifier expands to ".".
 .IP %H
 Command line argument under which file was found.
 .IP %i
 File's inode number (in decimal).
 .IP %k
-The amount of disk space used for this file in 1K blocks (rounded
-up).  This is different from %s/1024 if the file is a sparse file.
+The amount of disk space used for this file in 1K blocks. Since disk space is
+allocated in multiples of the filesystem block size this is usually greater
+than %s/1024, but it can also be smaller if the file is a sparse file.
 .IP %l
 Object of symbolic link (empty string if file is not a symbolic link).
 .IP %m
@@ -680,6 +916,10 @@ the output of %m.   Normally you will wa
 zero on this number, and to do this, you should use the 
 .B #
 flag (as in, for example, '%#m').
+.IP %M 
+File's permissions (in symbolic form, as for 
+.BR ls ).  
+This directive is supported in findutils 4.2.5 and later.
 .IP %n
 Number of hard links to file.
 .IP %p
@@ -689,6 +929,14 @@ File's name with the name of the command
 it was found removed.
 .IP %s
 File's size in bytes.
+.IP %S 
+File's sparseness.  This is calculated as (BLOCKSIZE*st_blocks /
+st_size).  The exact value you will get for an ordinary file of a
+certain length is system-dependent.  However, normally sparse files
+will have values less than 1.0, and files which use indirect blocks
+may have a value which is greater than 1.0.   The value used for
+BLOCKSIZE is system-dependent, but is usually 512 bytes.   If the file
+size is zero, the value printed is undefined.
 .IP %t
 File's last modification time in the format returned by the C `ctime'
 function.
@@ -704,8 +952,12 @@ File's type (like in ls \-l), U=unknown
 .IP %Y
 File's type (like %y), plus follow symlinks: L=loop, N=nonexistent
 .PP
-A `%' character followed by any other character is discarded (but the
-other character is printed).
+A `%' character followed by any other character is discarded, but the
+other character is printed (don't rely on this, as further format
+characters may be introduced).  A `%' at the end of the format
+argument causes undefined behaviour since there is no following
+character.  In some locales, it may hide your door keys, while in
+others it may remove the final page from the novel you are reading.
 
 The %m and %d directives support the 
 .B #
@@ -725,6 +977,10 @@ and
 .BR n .
 The `\-' format flag is supported and changes the alignment of a field
 from right-justified (which is the default) to left-justified.
+.PP
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
 
 
 .RE
@@ -735,14 +991,13 @@ into it.
 If \-depth is given, false; no effect.
 
 .IP "\-quit"
-Exit immediately.  No child proceses will be left running, but no more
+Exit immediately.  No child processes will be left running, but no more
 paths specified on the command line will be processed.  For example,
 .B find /tmp/foo /tmp/bar \-print \-quit
 will print only
 .BR /tmp/foo .
-Any command lines which have been built up with `
+Any command lines which have been built up with
 .B \-execdir ... {} +
-.R \' 
 will be invoked before 
 .B find
 exits.   The exit status may or may not be zero, depending on whether
@@ -752,7 +1007,59 @@ an error has already occurred.
 True; list current file in `ls \-dils' format on standard output.
 The block counts are of 1K blocks, unless the environment variable
 POSIXLY_CORRECT is set, in which case 512-byte blocks are used.
+See the
+.B UNUSUAL FILENAMES
+section for information about how unusual characters in filenames are handled.
+
 
+.SS UNUSUAL FILENAMES
+Many of the actions of 
+.B find
+result in the printing of data which is under the control of other
+users.  This includes file names, sizes, modification times and so
+forth.  File names are a potential problem since they can contain any
+character except '\\0' and '/'.  Unusual characters in file names can
+do unexpected and often undesirable things to your terminal (for
+example, changing the settings of your function keys on some
+terminals).  Unusual characters are handled differently by various
+actions, as described below.
+.IP "\-print0, \-fprint0\"
+Always print the exact filename, unchanged, even if the output is
+going to a terminal.
+.IP "\-ls, \-fls"
+Unusual characters are always escaped.  White space, backslash, and
+double quote characters are printed using C-style escaping (for
+example '\\f', '\\"').  Other unusual characters are printed using an
+octal escape.  Other printable characters (for \-ls and \-fls these are
+the characters between octal 041 and 0176) are printed as-is.
+.IP "\-printf, \-fprintf"
+If the output is not going to a terminal, it is printed as-is.
+Otherwise, the result depends on which directive is in use.  The
+directives %D, %F, %g, %G, %H, %Y, and %y expand to values which are
+not under control of files' owners, and so are printed as-is.  The
+directives %a, %b, %c, %d, %i, %k, %m, %M, %n, %s, %t, %u and %U have
+values which are under the control of files' owners but which cannot
+be used to send arbitrary data to the terminal, and so these are
+printed as-is.  The directives %f, %h, %l, %p and %P are quoted.  This
+quoting is performed in the same way as for GNU
+.BR ls .   
+This is not the same quoting mechanism as the one used for  \-ls and
+\-fls.   If you are able to decide what format to use for the output 
+of 
+.B find
+then it is normally better to use '\\0' as a terminator
+than to use newline, as file names can contain white space and newline
+characters.
+.IP "\-print, \-fprint"
+Quoting is handled in the same way as for \-printf and \-fprintf.
+If you are using 
+.B find
+in a script or in a situation where the matched files might have
+arbitrary names, you should consider using \-print0 instead of
+\-print.
+.P
+The \-ok and \-okdir actions print the current filename as-is.  This
+may change in a future release.
 .SS OPERATORS
 .P
 Listed in order of decreasing precedence:
@@ -761,17 +1068,18 @@ Force precedence.
 .IP "! \fIexpr\fR"
 True if \fIexpr\fR is false.
 .IP "\-not \fIexpr\fR"
-Same as ! \fIexpr\fR.
+Same as ! \fIexpr\fR, but not POSIX compliant.
 .IP "\fIexpr1 expr2\fR"
-And (implied); \fIexpr2\fR is not evaluated if \fIexpr1\fR is false.
+Two expressions in a row are taken to be joined with an 
+implied "and"; \fIexpr2\fR is not evaluated if \fIexpr1\fR is false.
 .IP "\fIexpr1\fR \-a \fIexpr2\fR"
 Same as \fIexpr1 expr2\fR.
 .IP "\fIexpr1\fR \-and \fIexpr2\fR"
-Same as \fIexpr1 expr2\fR.
+Same as \fIexpr1 expr2\fR, but not POSIX compliant.
 .IP "\fIexpr1\fR \-o \fIexpr2\fR"
 Or; \fIexpr2\fR is not evaluated if \fIexpr1\fR is true.
 .IP "\fIexpr1\fR \-or \fIexpr2\fR"
-Same as \fIexpr1\fR \-o \fIexpr2\fR.
+Same as \fIexpr1\fR \-o \fIexpr2\fR, but not POSIX compliant.
 .IP "\fIexpr1\fR , \fIexpr2\fR"
 List; both \fIexpr1\fR and \fIexpr2\fR are always evaluated.
 The value of \fIexpr1\fR is discarded; the value of the list is the
@@ -859,7 +1167,7 @@ does not actually enter such a subdirect
 emitting a diagnostic message.  Although this behaviour may be
 somewhat confusing, it is unlikely that anybody actually depends on
 this behaviour.  If the leaf optimisation has been turned off with
-.BR -noleaf ,
+.BR \-noleaf ,
 the directory entry will always be examined and the diagnostic message
 will be issued where it is appropriate.  Symbolic links cannot be used
 to create filesystem cycles as such, but if the \-L option or the
@@ -874,8 +1182,12 @@ or
 .I chdir() 
 on the symbolic link, so this diagnostic is frequently not necessary.
 .P
-The \-d option is supported for comatibility with various BSD systems,
-but you should use the POSIX-compliant predicate \-depth instead.
+The \-d option is supported for compatibility with various BSD systems,
+but you should use the POSIX-compliant option \-depth instead.
+.P
+The POSIXLY_CORRECT environment variable does not affect the behaviour
+of the \-regex or \-iregex tests because those tests aren't specified in
+the POSIX standard.
 .SH "ENVIRONMENT VARIABLES"
 .IP LANG
 Provides a default value for the internationalization variables that
@@ -895,7 +1207,7 @@ variable affects the interpretation of t
 query issued by `\-ok', but this is not the case for GNU find.
 .IP LC_CTYPE 
 This variable affects the treatment of character classes used with 
-the `\-name' option, if the system's 
+the `\-name' test, if the system's 
 .BR fnmatch (3) 
 library function supports this.   It has no effect on the behaviour 
 of the `\-ok' expression.
@@ -904,16 +1216,18 @@ Determines the locale to be used for int
 .IP NLSPATH
 Determines the location of the internationalisation message catalogues.
 .IP PATH
-Affects the directores which are searched to find the executables 
-invoked by `\-exec' and `\-ok'.
+Affects the directories which are searched to find the executables 
+invoked by `\-exec', `\-execdir', `\-ok' and `\-okdir'.
 .IP POSIXLY_CORRECT
-Determines the block size used by `-ls'.
+Determines the block size used by `\-ls' and `\-fls'.  
+If `POSIXLY_CORRECT' is set, blocks are units of 512 bytes.  Otherwise
+they are units of 1024 bytes.
 .IP TZ
 Affects the time zone used for some of the time-related format
-directives of -printf and -fprintf.
+directives of \-printf and \-fprintf.
 .SH "EXAMPLES"
 .nf
-.B find /tmp \-name core \-type f \-print | xargs /bin/rm -f
+.B find /tmp \-name core \-type f \-print | xargs /bin/rm \-f
 
 .fi
 Find files named 
@@ -923,7 +1237,7 @@ in or below the directory
 and delete them.  Note that this will work incorrectly if there are 
 any filenames containing newlines, single or double quotes, or spaces.
 .P
-.B find /tmp \-name core \-type f \-print0 | xargs \-0 /bin/rm -f
+.B find /tmp \-name core \-type f \-print0 | xargs \-0 /bin/rm \-f
 
 .fi
 Find files named 
@@ -953,84 +1267,98 @@ been used in that case also.
 
 .P
 .nf
-.B find /  \t( \-perm +4000 \-fprintf /root/suid.txt '%#m %u %p\en' ) , \e
-.B         \t\t( \-size +100M \-fprintf /root/big.txt  '%\-10s %p\en'  )
+.B find /  \t\e( \-perm \-4000 \-fprintf /root/suid.txt '%#m %u %p\en' \e) , \e
+.B       \t\t\e( \-size +100M \-fprintf /root/big.txt  '%\-10s %p\en' \e)
 
 .fi
 Traverse the filesystem just once, listing setuid files and
 directories into
 .B /root/suid.txt
 and large files into 
-.BR /root/big/txt .
+.BR /root/big.txt .
 
 .P
 .nf
-.B find $HOME  -mtime 0
+.B find $HOME  \-mtime 0
 
 .fi
 Search for files in your home directory which have been modified in
 the last twenty-four hours.  This command works this way because the
-time since each file was last accessed is divided by 24 hours and any 
+time since each file was last modified is divided by 24 hours and any 
 remainder is discarded.  That means that to match 
-.B -atime 
+.B \-mtime 
 .BR 0 ,
 a file will have to have a modification in the past which is less than
 24 hours ago.
 
+.P
+.nf
+.B find /sbin /usr/sbin -executable \e! -readable \-print
+
+.fi
+Search for files which are executable but not readable.
 
 .P
 .nf
-.B find . -perm 664
+.B find . \-perm 664
 
 .fi
 Search for files which have read and write permission for their owner,
-and group, but which the rest of the world can read but not write to.  
-Files which meet these criteria but have other permissions bits set
-(for example if someone can execute the file) will not be matched.
+and group, but which other users can read but not write to.  Files
+which meet these criteria but have other permissions bits set (for
+example if someone can execute the file) will not be matched.
 
 .P
 .nf
-.B find . -perm -664
+.B find . \-perm -664
 
 .fi
-Search for files which have read and write permission for their owner,
-and group, but which the rest of the world can read but not write to,
-without regard to the presence of any extra permission bits (for
-example the executable bit).  This will match a file which has mode
-0777, for example.
+Search for files which have read and write permission for their owner
+and group, and which other users can read, without regard to the
+presence of any extra permission bits (for example the executable
+bit).  This will match a file which has mode 0777, for example.
 
 .P
 .nf
-.B find . -perm +222
+.B find . \-perm /222
 
 .fi
-Search for files which are writeable by somebody (their owner, or
+Search for files which are writable by somebody (their owner, or
 their group, or anybody else).
 
 .P
 .nf
-.B find . -perm +022
-.B find . -perm +g+w,o+w
-.B find . -perm +g=w,o=w
+.B find . \-perm /220
+.B find . \-perm /u+w,g+w
+.B find . \-perm /u=w,g=w
 
 .fi
 All three of these commands do the same thing, but the first one uses
 the octal representation of the file mode, and the other two use the
 symbolic form.  These commands all search for files which are
-writeable by either their owner or their group.  The files don't have
-to be writeable by both the owner and group to be matched; either will
+writable by either their owner or their group.  The files don't have
+to be writable by both the owner and group to be matched; either will
 do.
 
 .P
 .nf
-.B find . -perm -022
-.B find . -perm -g+w,o+w
+.B find . \-perm -220
+.B find . \-perm \-g+w,u+w
 
 .fi
 Both these commands do the same thing; search for files which are
-writeable by both their owner and their group.
+writable by both their owner and their group.
 
+.P
+.nf
+.B find . \-perm \-444 \-perm /222 ! \-perm /111
+.B find . \-perm \-a+r \-perm /a+w ! \-perm /a+x
 
+.fi
+These two commands both search for files that are readable for
+everybody (\-perm \-444 or \-perm \-a+r), have at least on write bit
+set (\-perm /222 or \-perm /a+w) but are not executable for anybody (!
+\-perm /111 and ! \-perm /a+x respectively)
 
 .SH EXIT STATUS
 .PP
@@ -1043,15 +1371,87 @@ on the correctness of the results of
 
 .SH "SEE ALSO"
 \fBlocate\fP(1), \fBlocatedb\fP(5), \fBupdatedb\fP(1), \fBxargs\fP(1),
-\fBfnmatch\fP(3), \fBregex\fP(7), \fBstat\fP(2), \fBlstat\fP(2),
-\fBls\fP(1), \fBprintf\fP(3), \fBstrftime\fP(3), \fBctime\fP(3),
-\fBFinding Files\fP (on-line in Info, or printed), 
+\fBchmod\fP(1), \fBfnmatch\fP(3), \fBregex\fP(7), \fBstat\fP(2),
+\fBlstat\fP(2), \fBls\fP(1), \fBprintf\fP(3), \fBstrftime\fP(3),
+\fBctime\fP(3), \fBFinding Files\fP (on-line in Info, or printed).
 .SH "HISTORY"
 As of findutils-4.2.2, shell metacharacters ('*'. '?' or '[]' for
 example) used in filename patterns will match a leading '.', because
 IEEE POSIX interpretation 126 requires this.
+.P
+The syntax 
+\.B -perm +MODE 
+was deprecated in findutils-4.2.21, in favour of
+\.B -perm 
+.BR /MODE .
+As of findutils-4.3.3, 
+.B \-perm /000
+now matches all files instead of none.  
+.P
+Nanosecond-resolution
+timestamps were implemented in findutils-4.3.3.
+.TS
+l l l .
+Feature	Added in	Also occurs in 
+\-newerXY	4.3.3	BSD
+\-D	4.3.1
+\-O	4.3.1
+\-exec ... +	4.2.12	POSIX
+\-execdir	4.2.12	BSD
+\-okdir	4.2.12
+\-H	4.2.6	POSIX
+\-L	4.2.6	POSIX
+\-P	4.2.6	BSD
+\-delete	4.2.3	
+\-quit	4.2.3
+\-d	4.2.3	BSD
+\-wholename	4.2.0
+-\iwholename	4.2.0
+\-ignore_readdir_race	4.2.0
+\-fls	4.0
+\-ilname	3.8
+\-iname	3.8
+\-ipath	3.8
+\-iregex	3.8
+.TE
+.SH "NON-BUGS"
+.nf
+.B $ find . \-name *.c \-print
+find: paths must precede expression
+Usage: find [-H] [-L] [-P] [path...] [expression]
+.fi
+.P
+This happens because 
+.I *.c 
+has been expanded by the shell
+resulting in 
+.B find
+actually receiving a command line like this:
+.nf
+
+.B find . \-name bigram.c code.c frcode.c locate.c \-print
+
+.fi
+That command is of course not going to work.  Instead of doing things
+this way, you should enclose the pattern in quotes or escape the wildcard:
+.nf
+.B $ find . \-name \e*.c \-print
+.fi
 
 .SH "BUGS"
+.P
+There are security problems inherent in the behaviour that the POSIX
+standard specifies for
+.BR find ,
+which therefore cannot be fixed.  For example, the \-exec action is
+inherently insecure, and \-execdir should be used instead.  
+Please see \fBFinding Files\fP for more information. 
+.P
+The environment variable 
+.B  LC_COLLATE
+has no effect on the 
+.B \-ok 
+action.
 .P 
 The best way to report a bug is to use the form at
 http://savannah.gnu.org/bugs/?group=findutils.  
diff -up -r dbg/find14/find/find/find.c dbg/find6/find/find/find.c
