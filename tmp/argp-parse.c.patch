--- dbg/find14/find/gnulib-cvs/gnulib/lib/argp-parse.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/argp-parse.c	2020-01-28 23:39:42.000000000 -0600
@@ -15,10 +15,10 @@
 
    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+# include <config.h>
 #endif
 
 #include <alloca.h>
@@ -79,11 +79,11 @@ static volatile int _argp_hang;
 
 static const struct argp_option argp_default_options[] =
 {
-  {"help",	  '?',    	0, 0,  N_("Give this help list"), -1},
-  {"usage",	  OPT_USAGE,	0, 0,  N_("Give a short usage message"), 0},
-  {"program-name",OPT_PROGNAME,"NAME", OPTION_HIDDEN, N_("Set the program name"), 0},
-  {"HANG",	  OPT_HANG,    "SECS", OPTION_ARG_OPTIONAL | OPTION_HIDDEN,
-     N_("Hang for SECS seconds (default 3600)"), 0},
+  {"help",	  '?',    	0, 0,  N_("give this help list"), -1},
+  {"usage",	  OPT_USAGE,	0, 0,  N_("give a short usage message"), 0},
+  {"program-name",OPT_PROGNAME,N_("NAME"), OPTION_HIDDEN, N_("set the program name"), 0},
+  {"HANG",	  OPT_HANG,    N_("SECS"), OPTION_ARG_OPTIONAL | OPTION_HIDDEN,
+     N_("hang for SECS seconds (default 3600)"), 0},
   {NULL, 0, 0, 0, NULL, 0}
 };
 
@@ -97,7 +97,7 @@ argp_default_parser (int key, char *arg,
       break;
     case OPT_USAGE:
       __argp_state_help (state, state->out_stream,
-		       ARGP_HELP_USAGE | ARGP_HELP_EXIT_OK);
+			 ARGP_HELP_USAGE | ARGP_HELP_EXIT_OK);
       break;
 
     case OPT_PROGNAME:		/* Set the program name.  */
@@ -109,11 +109,7 @@ argp_default_parser (int key, char *arg,
 	 to be that, so we have to be a bit careful here.]  */
 
       /* Update what we use for messages.  */
-      state->name = strrchr (arg, '/');
-      if (state->name)
-	state->name++;
-      else
-	state->name = arg;
+      state->name = __argp_base_name (arg);
 
 #if defined _LIBC || HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME
       program_invocation_short_name = state->name;
@@ -144,7 +140,7 @@ static const struct argp argp_default_ar
 
 static const struct argp_option argp_version_options[] =
 {
-  {"version",	  'V',    	0, 0,  N_("Print program version"), -1},
+  {"version",	  'V',    	0, 0,  N_("print program version"), -1},
   {NULL, 0, 0, 0, NULL, 0}
 };
 
@@ -562,10 +558,7 @@ parser_init (struct parser *parser, cons
 
   if (parser->state.argv == argv && argv[0])
     /* There's an argv[0]; use it for messages.  */
-    {
-      char *short_name = strrchr (argv[0], '/');
-      parser->state.name = short_name ? short_name + 1 : argv[0];
-    }
+    parser->state.name = __argp_base_name (argv[0]);
   else
     parser->state.name = __argp_short_program_name ();
 
@@ -884,6 +877,20 @@ __argp_parse (const struct argp *argp, i
      to be parsed (which in some cases isn't actually an error).  */
   int arg_ebadkey = 0;
 
+#ifndef _LIBC
+  if (!(flags & ARGP_PARSE_ARGV0))
+    {
+#ifdef HAVE_DECL_PROGRAM_INVOCATION_NAME
+      if (!program_invocation_name)
+	program_invocation_name = argv[0];
+#endif
+#ifdef HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME
+      if (!program_invocation_short_name)
+	program_invocation_short_name = __argp_base_name (argv[0]);
+#endif
+    }
+#endif
+	
   if (! (flags & ARGP_NO_HELP))
     /* Add our own options.  */
     {
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: argp-pin.c
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/argp-pv.c dbg/find6/find/gnulib-cvs/gnulib/lib/argp-pv.c
