--- dbg/find14/find/gnulib/lib/yesno.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib/lib/yesno.c	2020-01-28 23:39:42.000000000 -0600
@@ -1,5 +1,7 @@
 /* yesno.c -- read a yes/no response from stdin
-   Copyright (C) 1990, 1998, 2001, 2003, 2004 Free Software Foundation, Inc.
+
+   Copyright (C) 1990, 1998, 2001, 2003, 2004, 2005, 2006 Free
+   Software Foundation, Inc.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -13,44 +15,50 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
-#if HAVE_CONFIG_H
-# include <config.h>
-#endif
+#include <config.h>
 
 #include "yesno.h"
 
-#include <ctype.h>
 #include <stdlib.h>
 #include <stdio.h>
 
-#if USE_UNLOCKED_IO
-# include "unlocked-io.h"
+#if ENABLE_NLS
+# include "getline.h"
 #endif
 
-/* Read one line from standard input
-   and return nonzero if that line begins with y or Y,
-   otherwise return 0. */
+/* Return true if we read an affirmative line from standard input.  */
 
 extern int rpmatch (char const *response);
 
 bool
 yesno (void)
 {
-  /* We make some assumptions here:
-     a) leading white space in the response are not vital
-     b) the first 128 characters of the answer are enough (the rest can
-	be ignored)
-     I cannot think for a situation where this is not ok.  --drepper@gnu  */
-  char buf[128];
-  int len = 0;
-  int c;
-
-  while ((c = getchar ()) != EOF && c != '\n')
-    if ((len > 0 && len < 127) || (len == 0 && !isspace (c)))
-      buf[len++] = c;
-  buf[len] = '\0';
+  bool yes;
+
+#if ENABLE_NLS
+  char *response = NULL;
+  size_t response_size = 0;
+  ssize_t response_len = getline (&response, &response_size, stdin);
+
+  if (response_len <= 0)
+    yes = false;
+  else
+    {
+      response[response_len - 1] = '\0';
+      yes = (0 < rpmatch (response));
+    }
+
+  free (response);
+#else
+  /* Test against "^[yY]", hardcoded to avoid requiring getline,
+     regex, and rpmatch.  */
+  int c = getchar ();
+  yes = (c == 'y' || c == 'Y');
+  while (c != '\n' && c != EOF)
+    c = getchar ();
+#endif
 
-  return rpmatch (buf) == 1;
+  return yes;
 }
diff -up -r dbg/find14/find/gnulib/lib/yesno.h dbg/find6/find/gnulib/lib/yesno.h
