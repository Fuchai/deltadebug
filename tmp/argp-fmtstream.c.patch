--- dbg/find14/find/gnulib-cvs/gnulib/lib/argp-fmtstream.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/argp-fmtstream.c	2020-01-28 23:39:42.000000000 -0600
@@ -1,5 +1,5 @@
 /* Word-wrapping and line-truncating streams
-   Copyright (C) 1997,1998,1999,2001,2002,2003 Free Software Foundation, Inc.
+   Copyright (C) 1997-1999,2001,2002,2003,2005 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Written by Miles Bader <miles@gnu.ai.mit.edu>.
 
@@ -15,13 +15,13 @@
 
    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. */
 
 /* This package emulates glibc `line_wrap_stream' semantics for systems that
    don't have that.  */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+# include <config.h>
 #endif
 
 #include <stdlib.h>
@@ -101,11 +101,10 @@ __argp_fmtstream_free (argp_fmtstream_t
   if (fs->p > fs->buf)
     {
 #ifdef USE_IN_LIBIO
-      if (_IO_fwide (fs->stream, 0) > 0)
-	__fwprintf (fs->stream, L"%.*s", (int) (fs->p - fs->buf), fs->buf);
-      else
+      __fxprintf (fs->stream, "%.*s", (int) (fs->p - fs->buf), fs->buf);
+#else
+      fwrite_unlocked (fs->buf, 1, fs->p - fs->buf, fs->stream);
 #endif
-	fwrite_unlocked (fs->buf, 1, fs->p - fs->buf, fs->stream);
     }
   free (fs->buf);
   free (fs);
@@ -247,9 +246,10 @@ __argp_fmtstream_update (argp_fmtstream_
 		 Oh well.  Put it on an overlong line by itself.  */
 	      p = buf + (r + 1 - fs->point_col);
 	      /* Find the end of the long word.  */
-	      do
-		++p;
-	      while (p < nl && !isblank (*p));
+	      if (p < nl)
+		do
+		  ++p;
+		while (p < nl && !isblank (*p));
 	      if (p == nl)
 		{
 		  /* It already ends a line.  No fussing required.  */
@@ -290,17 +290,15 @@ __argp_fmtstream_update (argp_fmtstream_
 	      else
 		/* Output the first line so we can use the space.  */
 		{
-#ifdef USE_IN_LIBIO
-		  if (_IO_fwide (fs->stream, 0) > 0)
-		    __fwprintf (fs->stream, L"%.*s\n",
-				(int) (nl - fs->buf), fs->buf);
-		  else
+#ifdef _LIBC
+		  __fxprintf (fs->stream, "%.*s\n",
+			      (int) (nl - fs->buf), fs->buf);
+#else
+		  if (nl > fs->buf)
+		    fwrite_unlocked (fs->buf, 1, nl - fs->buf, fs->stream);
+		  putc_unlocked ('\n', fs->stream);
 #endif
-		    {
-		      if (nl > fs->buf)
-			fwrite_unlocked (fs->buf, 1, nl - fs->buf, fs->stream);
-		      putc_unlocked ('\n', fs->stream);
-		    }
+
 		  len += buf - fs->buf;
 		  nl = buf = fs->buf;
 		}
@@ -359,15 +357,12 @@ __argp_fmtstream_ensure (struct argp_fmt
       /* Flush FS's buffer.  */
       __argp_fmtstream_update (fs);
 
-#ifdef USE_IN_LIBIO
-      if (_IO_fwide (fs->stream, 0) > 0)
-	{
-	  __fwprintf (fs->stream, L"%.*s", (int) (fs->p - fs->buf), fs->buf);
-	  wrote = fs->p - fs->buf;
-	}
-      else
+#ifdef _LIBC
+      __fxprintf (fs->stream, "%.*s", (int) (fs->p - fs->buf), fs->buf);
+      wrote = fs->p - fs->buf;
+#else
+      wrote = fwrite_unlocked (fs->buf, 1, fs->p - fs->buf, fs->stream);
 #endif
-	wrote = fwrite_unlocked (fs->buf, 1, fs->p - fs->buf, fs->stream);
       if (wrote == fs->p - fs->buf)
 	{
 	  fs->p = fs->buf;
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/argp-fmtstream.h dbg/find6/find/gnulib-cvs/gnulib/lib/argp-fmtstream.h
