--- dbg/find14/find/lib/savedirinfo.h	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/lib/savedirinfo.h	2020-01-28 23:39:42.000000000 -0600
@@ -14,7 +14,7 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 /* Written by James Youngman <jay@gnu.org>.
  * Based on savedir.h by David MacKenzie <djm@gnu.org>.
@@ -23,11 +23,51 @@
 #if !defined SAVEDIRINFO_H_
 # define SAVEDIRINFO_H_
 
+
+typedef enum tagSaveDirControlFlags
+  {
+    SavedirSort = 1
+  } 
+SaveDirControlFlags;
+
+
+typedef enum tagSaveDirDataFlags
+  {
+    SavedirHaveFileType = 1
+  } 
+SaveDirDataFlags;
+
+
+/* We keep the name and the type in a structure together 
+ * to allow us to sort them together.
+ */
+struct savedir_direntry
+{
+  int      flags;		/* from SaveDirDataFlags */
+  char     *name;		/* the name of the directory entry */
+  mode_t   type_info;		/* the type (or zero if unknown) */
+};
+
 struct savedir_dirinfo
 {
+  char *buffer;			/* The names are stored here. */
+  size_t size;			/* The total number of results. */
+  struct savedir_direntry *entries;	/* The results themselves */
+};
+
+
+struct savedir_extrainfo
+{
   mode_t type_info;
 };
 
-char *savedirinfo (const char *dir, struct savedir_dirinfo **extra);
+/* savedirinfo() is the old interface. */
+char *savedirinfo (const char *dir, struct savedir_extrainfo **extra);
+
+/* savedir() is the 'new' interface, but the function has the same name
+ * as the function from findutils 4.1.7 and 4.1.20.
+ */
+struct savedir_dirinfo * xsavedir(const char *dir, int flags);
+void free_dirinfo(struct savedir_dirinfo *p);
 
 #endif
Binary files dbg/find14/find/lib/savedirinfo.o and dbg/find6/find/lib/savedirinfo.o differ
diff -up -r dbg/find14/find/lib/strspn.c dbg/find6/find/lib/strspn.c
