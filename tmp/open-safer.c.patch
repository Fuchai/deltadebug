--- dbg/find14/find/gnulib-cvs/gnulib/lib/open-safer.c	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/open-safer.c	2020-01-28 23:39:42.000000000 -0600
@@ -1,6 +1,6 @@
 /* Invoke open, but avoid some glitches.
 
-   Copyright (C) 2004 Free Software Foundation, Inc.
+   Copyright (C) 2005, 2006 Free Software Foundation, Inc.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -14,62 +14,37 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 /* Written by Paul Eggert.  */
 
-#if HAVE_CONFIG_H
-# include <config.h>
-#endif
+#include <config.h>
 
-#include <fcntl-safer.h>
+#include "fcntl-safer.h"
 
-#include <unistd-safer.h>
-
-#include <errno.h>
+#include <fcntl.h>
 #include <stdarg.h>
-
-#if HAVE_FCNTL_H
-# include <fcntl.h>
-#endif
-
-#if HAVE_UNISTD_H
-# include <unistd.h>
-#endif
-#ifndef STDERR_FILENO
-# define STDERR_FILENO 2
-#endif
-
-/* Like open, but do not return STDIN_FILENO, STDOUT_FILENO, or
-   STDERR_FILENO.  */
+#include "unistd-safer.h"
 
 int
-open_safer (char const *file, int oflag, ...)
+open_safer (char const *file, int flags, ...)
 {
-  int fd;
   mode_t mode = 0;
 
-  if (oflag & O_CREAT)
+  if (flags & O_CREAT)
     {
-      va_list args;
-      va_start (args, oflag);
-      if (sizeof (int) <= sizeof (mode_t))
-	mode = va_arg (args, mode_t);
-      else
-	mode = va_arg (args, int);
-      va_end (args);
-    }
+      va_list ap;
+      va_start (ap, flags);
 
-  fd = open (file, oflag, mode);
+      /* Assume mode_t promotes to int if and only if it is smaller.
+	 This assumption isn't guaranteed by the C standard, but we
+	 don't know of any real-world counterexamples.  */
+      mode = (sizeof (mode_t) < sizeof (int)
+	      ? va_arg (ap, int)
+	      : va_arg (ap, mode_t));
 
-  if (0 <= fd && fd <= STDERR_FILENO)
-    {
-      int f = dup_safer (fd);
-      int e = errno;
-      close (fd);
-      errno = e;
-      fd = f;
+      va_end (ap);
     }
 
-  return fd;
+  return fd_safer (open (file, flags, mode));
 }
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: pagealign_alloc.c
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: pagealign_alloc.h
Only in dbg/find14/find/gnulib-cvs/gnulib/lib: path-concat.c
Only in dbg/find14/find/gnulib-cvs/gnulib/lib: path-concat.h
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/pathmax.h dbg/find6/find/gnulib-cvs/gnulib/lib/pathmax.h
