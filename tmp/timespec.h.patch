--- dbg/find14/find/gnulib-cvs/gnulib/lib/timespec.h	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/gnulib-cvs/gnulib/lib/timespec.h	2020-01-28 23:39:42.000000000 -0600
@@ -1,6 +1,6 @@
 /* timespec -- System time interface
 
-   Copyright (C) 2000, 2002, 2004 Free Software Foundation, Inc.
+   Copyright (C) 2000, 2002, 2004, 2005, 2007 Free Software Foundation, Inc.
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -14,58 +14,24 @@
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
-   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
+   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
 
 #if ! defined TIMESPEC_H
 # define TIMESPEC_H
 
-/* You must include config.h before including this file.  */
+# include <time.h>
 
-# include <sys/types.h>
-# if TIME_WITH_SYS_TIME
-#  include <sys/time.h>
-#  include <time.h>
-# else
-#  if HAVE_SYS_TIME_H
-#   include <sys/time.h>
-#  else
-#   include <time.h>
-#  endif
-# endif
-
-# if ! HAVE_STRUCT_TIMESPEC
-/* Some systems don't define this struct, e.g., AIX 4.1, Ultrix 4.3.  */
-struct timespec
+/* Return negative, zero, positive if A < B, A == B, A > B, respectively.
+   Assume the nanosecond components are in range, or close to it.  */
+static inline int
+timespec_cmp (struct timespec a, struct timespec b)
 {
-  time_t tv_sec;
-  long tv_nsec;
-};
-# endif
-
-# ifdef ST_MTIM_NSEC
-#  define ST_TIME_CMP_NS(a, b, ns) ((a).ns < (b).ns ? -1 : (a).ns > (b).ns)
-# else
-#  define ST_TIME_CMP_NS(a, b, ns) 0
-# endif
-# define ST_TIME_CMP(a, b, s, ns) \
-   ((a).s < (b).s ? -1 : (a).s > (b).s ? 1 : ST_TIME_CMP_NS(a, b, ns))
-# define ATIME_CMP(a, b) ST_TIME_CMP (a, b, st_atime, st_atim.ST_MTIM_NSEC)
-# define CTIME_CMP(a, b) ST_TIME_CMP (a, b, st_ctime, st_ctim.ST_MTIM_NSEC)
-# define MTIME_CMP(a, b) ST_TIME_CMP (a, b, st_mtime, st_mtim.ST_MTIM_NSEC)
-
-# ifdef ST_MTIM_NSEC
-#  define TIMESPEC_NS(timespec) ((timespec).ST_MTIM_NSEC)
-# else
-#  define TIMESPEC_NS(timespec) 0
-# endif
-
-# if ! HAVE_DECL_NANOSLEEP
-/* Don't specify a prototype here.  Some systems (e.g., OSF) declare
-   nanosleep with a conflicting one (const-less first parameter).  */
-int nanosleep ();
-# endif
+  return (a.tv_sec < b.tv_sec ? -1
+	  : a.tv_sec > b.tv_sec ? 1
+	  : a.tv_nsec - b.tv_nsec);
+}
 
-int gettime (struct timespec *);
+void gettime (struct timespec *);
 int settime (struct timespec const *);
 
 #endif
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: tls.c
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: tls.h
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: tmpdir.c
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: tmpdir.h
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: tmpfile.c
Only in dbg/find6/find/gnulib-cvs/gnulib/lib: tmpfile-safer.c
Only in dbg/find14/find/gnulib-cvs/gnulib/lib: TODO
diff -up -r dbg/find14/find/gnulib-cvs/gnulib/lib/trigl.c dbg/find6/find/gnulib-cvs/gnulib/lib/trigl.c
