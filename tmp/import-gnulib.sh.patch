--- dbg/find14/find/import-gnulib.sh	2020-01-28 23:47:42.000000000 -0600
+++ dbg/find6/find/import-gnulib.sh	2020-01-28 23:39:42.000000000 -0600
@@ -1,7 +1,7 @@
 #! /bin/sh
 #
 # import-gnulib.sh -- imports a copy of gnulib into findutils
-# Copyright (C) 2003,2004 Free Software Foundation, Inc.
+# Copyright (C) 2003,2004,2005,2006,2007 Free Software Foundation, Inc.
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -15,106 +15,151 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
 # USA.
 #
 ##########################################################################
 #
-# This script is intended to populate the "gnulib" directory 
+# This script is intended to populate the "gnulib" directory
 # with a subset of the gnulib code, as provided by "gnulib-tool".
 #
-# To use it, run this script, speficying the location of the 
-# gnulib code as the only argument.   Some sanity-checking is done 
-# before we commit to modifying things.   The gnulib code is placed
-# in the "gnulib" subdirectory, which is where the buid files expect 
-# it to be. 
-# 
-
-destdir="gnulib"
-
-
-# Modules needed for findutils itself.
-findutils_modules="\
-alloca  argmatch  dirname error fileblocks  fnmatch-gnu  \
-getline getopt human idcache  lstat malloc memcmp memset mktime	  \
-modechange   pathmax quotearg realloc regex rpmatch savedir stat  \
-stpcpy strdup strftime  strstr strtol strtoul strtoull strtoumax  \
-xalloc xalloc-die xgetcwd  xstrtol  xstrtoumax yesno human filemode \
-getline stpcpy canonicalize mountlist closeout gettext"
-
-# We need regex to ensure that we can build on platforms like 
-# Solaris which lack those functions. 
-
-modules="$findutils_modules $intl_modules"
-export modules
-
-if test $# -lt 1
-then
-    echo "You need to specify the name of the directory containing gnulib" >&2
-    exit 1
-fi
-
-if test -d "$1"
-then
-    true
-else
-    echo "$1 is not a directory" >&2
-    exit 1
-fi
-
-if test -f "$1"/gnulib-tool
-then
-    true
-else
-    echo "$1/gnulib-tool does not exist, did you specify the right directory?" >&2
-    exit 1
-fi
-
-if test -x "$1"/gnulib-tool
-then
-    true
-else
-    echo "$1/gnulib-tool is not executable" >&2
-    exit 1
-fi
-
-    
-# exec "$1"/gnulib-tool --create-testdir --dir="$destdir" --lib=libgnulib $modules
-
-if [ -d gnulib ]
-then
-    echo "Warning: directory gnulib already exists." >&2
-else
-    mkdir gnulib
-fi
+# To use it, just run this script with the top-level sourec directory 
+# as your working directory.
 
+# If CDPATH is set, it will sometimes print the name of the directory
+# to which you have moved.  Unsetting CDPATH prevents this, as does
+# prefixing it with ".".
+unset CDPATH
+
+## Defaults
+# cvsdir=/doesnotexist
+configfile="./import-gnulib.config"
+need_checkout=yes
+
+
+usage() {
+    cat >&2 <<EOF
+usage: $0 [-d gnulib-directory]
+
+The default behaviour is to check out the Gnulib code via anonymous
+CVS (or update it if there is a version already checked out).  The
+checkout or update is performed to the gnulib version indicated in
+the configuration file $configfile.
 
-if "$1"/gnulib-tool --import --dir=. --lib=libgnulib --source-base=gnulib/lib --m4-base=gnulib/m4  $modules
-then
-    : OK
-else
-    echo "gnulib-tool failed, exiting." >&2
-    exit 1
-fi
+If you wish to work with a different version of gnulib, use the -d option
+to specify the directory containing the gnulib code.
+EOF
+}
 
 
+do_checkout () {
+    local cvsdir="$1"
+    echo checking out gnulib from CVS in $cvsdir
+
+    if [ -z "$gnulib_version" ] ; then
+        echo "Error: There should be a gnulib_version setting in $configfile, but there is not." >&2
+        exit 1
+    fi
+    
+    
+    if ! [ -d "$cvsdir" ] ; then	
+        if mkdir "$cvsdir" ; then
+    	echo "Created $cvsdir"
+        else
+    	echo "Failed to create $cvsdir" >&2
+    	exit 1
+        fi
+    fi
+    
+    # Decide if gnulib_version is probably a date or probably a tag.  
+    if date -d yesterday >/dev/null ; then
+        # It looks like GNU date is available
+        if date -d "$gnulib_version" >/dev/null ; then
+    	# Looks like a date.
+    	cvs_sticky_option="-D"
+        else
+    	echo "Warning: assuming $gnulib_version is a CVS tag rather than a date" >&2
+    	cvs_sticky_option="-r"
+        fi
+    else
+    	# GNU date unavailable, assume the version is a date
+    	cvs_sticky_option="-D"
+    fi
+
+
+
+    (
+        # Change directory unconditionally (rater than  using checkout -d) so that
+        # cvs does not pick up defaults from ./CVS.  Those defaults refer to our
+        # own CVS repository for our code, not to gnulib.
+        cd $cvsdir 
+        if test -d gnulib/CVS ; then
+    	cd gnulib
+    	cmd=update
+    	root="" # use previous 
+        else
+    	root="-d :pserver:anonymous@cvs.sv.gnu.org:/sources/gnulib"
+    	cmd=checkout
+    	args=gnulib
+        fi
+        set -x
+        cvs -q -z3 $root  $cmd $cvs_sticky_option "$gnulib_version" $args
+        set +x
+    )
+}
+
+run_gnulib_tool() {
+    local tool="$1"
+    if test -f "$tool"
+    then
+        true
+    else
+        echo "$tool does not exist, did you specify the right directory?" >&2
+        exit 1
+    fi
+    
+    if test -x "$tool"
+    then
+        true
+    else
+        echo "$tool is not executable" >&2
+        exit 1
+    fi
+    
+    
+    if [ -d gnulib ]
+    then
+        echo "Warning: directory gnulib already exists, removing it." >&2
+        rm -rf gnulib
+    fi
+    mkdir gnulib
+    
+    set -x
+    if "$tool" --import --symlink --with-tests --dir=. --lib=libgnulib --source-base=gnulib/lib --m4-base=gnulib/m4  $modules
+    then
+        set +x
+    else
+        set +x
+        echo "$tool failed, exiting." >&2
+        exit 1
+    fi
+}
+
+
+hack_gnulib_tool_output() {
+    local gnulibdir="${1}"
+    for file in $extra_files; do
+      case $file in
+        */mdate-sh | */texinfo.tex) dest=doc;;
+        *) dest=build-aux;;
+      esac
+      cp -fp "${gnulibdir}"/"$file" "$dest" || exit
+    done
+
 
-cat > gnulib/Makefile.am <<EOF
-# Copyright (C) 2004 Free Software Foundation, Inc.
-#
-# This file is free software, distributed under the terms of the GNU
-# General Public License.  As a special exception to the GNU General
-# Public License, this file may be distributed as part of a program
-# that contains a configuration script generated by Automake, under
-# the same distribution terms as the rest of that program.
-#
-# This file was generated by $0 $@.
-#
-SUBDIRS = lib m4
-EOF
 
-(
-cat <<EOF
+
+    cat > gnulib/Makefile.am <<EOF
 # Copyright (C) 2004 Free Software Foundation, Inc.
 #
 # This file is free software, distributed under the terms of the GNU
@@ -125,18 +170,48 @@ cat <<EOF
 #
 # This file was generated by $0 $@.
 #
+SUBDIRS = lib
 EOF
-printf "%s" "EXTRA_DIST = "
-cd  gnulib/m4
-ls *.m4 | sed -e 's/$/ \\/' | sed -e '$ s/\\$//'
-echo 
-) > gnulib/m4/Makefile.am
+}
+
 
+refresh_output_files() {
+    aclocal -I m4 -I gnulib/m4     &&     
+    autoheader                     &&     
+    autoconf                       &&     
+    automake --add-missing --copy 
+}
+
+
+main() {
+    ## Option parsing
+    local gnulibdir=/doesnotexist
+    while getopts "d:" opt
+    do
+      case "$opt" in
+          d)  gnulibdir="$OPTARG" ; need_checkout=no ;;
+          **) usage; exit 1;;
+      esac
+    done
+
+    # We need the config file to tell us which modules 
+    # to use, even if we don't want to know the CVS version.
+    . $configfile || exit 1
+
+    ## If -d was not given, do CVS checkout/update
+    if [ $need_checkout = yes ] ; then
+        do_checkout gnulib-cvs
+	gnulibdir=gnulib-cvs/gnulib
+    else
+        echo "Warning: using gnulib code which already exists in $gnulibdir" >&2
+    fi
+    
+    ## Invoke gnulib-tool to import the code.
+    local tool="${gnulibdir}"/gnulib-tool
 
+    run_gnulib_tool "${tool}" && 
+    hack_gnulib_tool_output "${gnulibdir}" &&
+    refresh_output_files && echo Done.
+}
 
-# We also need config.rpath, because configure calls it, but for 
-# some reason, "autoreconf -i" doesn't fetch it.  
-for f in config.rpath
-do
-  (set -x; cp "$1"/config/"$f" . )
-done
+main "$@"
diff -up -r dbg/find14/find/INSTALL dbg/find6/find/INSTALL
